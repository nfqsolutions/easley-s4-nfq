{"version":3,"sources":["components/Monitor/Loading.js","components/Monitor/PullReqCard.js","components/Monitor/PullReqList.js","components/Monitor/Header.js","components/Monitor/App.js","Services/RepoServices.js","index.js"],"names":["Loading","classes","this","props","react_default","a","createElement","className","containerLoading","CircularProgress_default","progress","color","Component","withStyles","theme","textAlign","display","justifyContent","alignItems","PullReqCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getDiffDates","bind","assertThisInitialized","date","test","moment","diff","concat","green","circleStatus","yellow","red","_this$props","authorAvatar","title","authorName","fromBranch","toBranch","comments","reviewers","participants","id","Card_default","card","CardContent_default","cardContent","Grid_default","item","xs","authorAvatarContainer","Avatar_default","alt","src","infoContainer","index_es","variant","nameAuthor","namePr","branches","container","reviewersContainer","titleReviewers","reviewersAvatarContainer","map","index","key","links","avatar","href","avatarReviewrs","approved","Badge_default","badgeContent","badge","user","dateContainer","format","height","margin","padding","backgroundColor","flexDirection","maxWidth","width","textTransform","fontWeight","fontSize","flexBasis","overflow","whiteSpace","textOverflow","marginLeft","paddingBottom","top","right","borderRadius","PullReqList","results","root","justify","spacing","Monitor_PullReqCard","author","display_name","source","branch","name","destination","comment_count","updated_on","flexGrow","Header","dataSize","titleContainer","titleRepo","repository","size","marginTop","themeApp","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","join","App","state","repoNames","getPullRequest","_this2","counter","showRepo","length","repoName","fetch","endPoint","then","response","json","fetchRepos","data","setState","apiResults","values","self","Promise","all","url","responseUrl","urlId","setInterval","_this$state","Fragment","CssBaseline_default","styles","Monitor_Header","Monitor_PullReqList","Monitor_Loading","ReactDOM","render","HashRouter","Monitor_App","document","getElementById"],"mappings":"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","file":"static/js/main.d78f4bbe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  progress:{\n    textAlign: \"center\"\n  },\n  containerLoading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nclass Loading extends Component {\n  render(){\n    const {classes} = this.props;\n      return(\n        <div className={classes.containerLoading}>\n          <CircularProgress className={classes.progress} color=\"primary\"/>\n        </div>\n      )}\n    }\n\nLoading.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles (styles)(Loading);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from '@material-ui/core/Badge';\n\nimport moment from \"moment\";\n\nconst styles = theme => ({\n  card: {\n    height: \"120px\",\n    margin: \"5px\",\n    padding: \"10px\",\n    backgroundColor: \"#e0e0e0\",\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  authorAvatarContainer: {\n    maxWidth: \"90px\"\n  },\n  authorAvatar: {\n    margin: \"10px\",\n    width: \"60px\",\n    height: \"60px\",\n  },\n  infoContainer:{\n    width: \"200px\"\n  },\n  nameAuthor: {\n    textAlign: \"left\",\n    textTransform: \"capitalize\",\n    fontWeight: \"bold\",\n    fontSize: \"20px\"\n  },\n  namePr: {\n    textAlign: \"left\",\n    flexBasis: \"unset\",\n    overflow: \"hidden\",\n    whiteSpace:\"nowrap\",\n    textOverflow: \"ellipsis\"\n  },\n  id: {\n    textAlign: \"left\",\n    flexBasis: \"unset\",\n    fontWeight: \"bold\"\n  },\n  branches: {\n    width: \"100px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"0 30px\",\n  },\n  fromBranch :{\n    overflow: \"hidden\",\n    whiteSpace:\"nowrap\",\n    textOverflow: \"ellipsis\"\n  },\n  toBranch :{\n    overflow: \"hidden\",\n    whiteSpace:\"nowrap\",\n    textOverflow: \"ellipsis\"\n  },\n  comments: {\n    width: \"35px\",\n    margin: \"0 20px\"\n  },\n  titleReviewers:{\n    fontWeight: \"bold\",\n  },\n  reviewersContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"0 20px\"\n  },\n  reviewersAvatarContainer:{\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  avatarReviewrs: {\n    margin: \"5px\",\n  },\n  dateContainer:{\n    marginLeft: \"100px\",\n    display: \"flex\",\n    flexDirection:\"column\",\n    alignItems: \"center\"\n  },\n  date: {\n    textAlign: \"center\",\n    paddingBottom:\"10px\",\n    fontWeight: \"bold\",\n  },\n  badge: { \n    top: '30%', \n    right: -3, \n    backgroundColor: \"#29b6f6\"\n  },\n  circleStatus:{\n    width: \"20px\",\n    height:\"20px\",\n    borderRadius: \"50%\",\n  },\n  green: {\n    backgroundColor:\"green\"\n  },\n  yellow: {\n    backgroundColor:\"yellow\"\n  },\n  red: {\n    backgroundColor:\"red\"\n  }\n});\n\nclass PullReqCard extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.getDiffDates = this.getDiffDates.bind(this);\n  }\n\n  getDiffDates(date){\n    let test = moment().diff(moment(date), 'hours');\n    \n    if(test < 24){\n      return(\n        <div className={`${this.props.classes.green} ${this.props.classes.circleStatus}`}></div>\n      )\n    }\n    else if(test >= 24 && test < 48){\n      return(\n        <div className={`${this.props.classes.yellow} ${this.props.classes.circleStatus}`}></div>\n       )\n    }\n    else{\n      return(\n        <div className={`${this.props.classes.red} ${this.props.classes.circleStatus}`}></div>\n      )\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      authorAvatar,\n      title,\n      authorName,\n      fromBranch,\n      toBranch,\n      comments,\n      reviewers,\n      participants,\n      date,\n      id\n    } = this.props; \n\n    return (\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Grid item xs={1} className={classes.authorAvatarContainer}>\n            <Avatar\n              alt=\"Author's image\"\n              src={authorAvatar}\n              className={classes.authorAvatar}\n            />\n          </Grid>\n\n          <Grid item xs={3} className={classes.infoContainer}>\n            <Typography variant=\"subtitle2\" color=\"primary\" className={classes.nameAuthor}>\n              {authorName}\n            </Typography>\n            <Typography variant=\"body2\" color=\"secondary\" className={classes.namePr}>\n              {title}\n            </Typography>\n            <Typography variant=\"subtitle2\" color=\"secondary\" className={classes.id}>\n              #{id}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={2} className={classes.branches}>\n            <Typography variant=\"subtitle2\" className={classes.fromBranch} color=\"secondary\">{fromBranch}</Typography>\n              <i className=\"fas fa-arrow-down\"/>\n            <Typography variant=\"subtitle2\" className={classes.toBranch} color=\"secondary\">{toBranch}</Typography>\n          </Grid>\n\n          <Grid item xs={1} className={classes.comments}>\n            <Typography variant=\"subtitle2\" color=\"secondary\">\n              <i className=\"far fa-comment-dots fa-2x\"/><br/>{comments}\n            </Typography>\n          </Grid>\n\n          <Grid container xs={2} className={classes.reviewersContainer}>\n            <Grid item>\n              <Typography className={classes.titleReviewers} variant=\"subtitle2\" color=\"secondary\">\n                Reviewers\n              </Typography>\n            </Grid>\n            <Grid item className={classes.reviewersAvatarContainer}>\n            {reviewers.map((item, index) => {\n              return (\n                <Avatar\n                  key={index}\n                  alt=\"Reviewer's image\"\n                  src={item.links.avatar.href}\n                  className={classes.avatarReviewrs}\n                />\n              );\n            })}\n            </Grid>\n          </Grid>\n\n          <Grid container xs={2} className={classes.reviewersContainer}>\n            <Grid item>\n              <Typography className={classes.titleReviewers} variant=\"subtitle2\" color=\"secondary\">\n                Approved\n              </Typography>\n            </Grid>\n         \n            <Grid item className={classes.reviewersAvatarContainer}>\n            {participants.map((item => {\n              if(item.approved===true){\n                  return (\n                \n                <Badge badgeContent={\"✔\"} classes={{ badge: classes.badge }}>\n                  <Avatar\n                    alt=\"\"\n                    src={item.user.links.avatar.href }\n                    className={classes.avatarReviewrs}\n                  />\n                </Badge>\n                )\n              }else{ \n                return(\n                  \"\"\n                )\n              }\n            \n            }))}\n            </Grid>\n          </Grid>\n\n          <Grid container xs={2} className={classes.dateContainer}>\n            <Grid item>\n              <Typography variant=\"subtitle2\" color=\"secondary\">\n                <div className={classes.date}>\n                  {moment(date).format(\"DD/MM/YYYY hh:mm:ss\")}\n                </div>\n              </Typography>\n            </Grid>\n            <Grid item>\n              <div> {this.getDiffDates(date)} </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nPullReqCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PullReqCard);\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport PullReqCard from \"./PullReqCard\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  }\n});\nclass PullReqList extends Component {\n  render() {\n\n    const {classes , results} = this.props;\n\n    return (\n      <Grid container className={classes.root} justify=\"center\" alignItems=\"center\" spacing={8}>\n        {results.map(item => {\n          return (\n            <Grid key={item.id} item xs={12}>\n              <PullReqCard \n                authorAvatar={item.author.links.avatar.href}\n                title={item.title}\n                authorName={item.author.display_name}\n                fromBranch={item.source.branch.name}\n                toBranch={item.destination.branch.name}\n                comments={item.comment_count}\n                reviewers={item.reviewers}\n                participants={item.participants}\n                date={item.updated_on}\n                id={item.id}\n              />\n            </Grid>\n          )\n        })}\n      </Grid>\n    );\n  }\n}\n\nPullReqList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles (styles)(PullReqList);\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Typography} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\n\nconst styles = theme => ({\n  titleContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: \"10px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  titleRepo: {\n    textAlign: \"center\",\n    marginTop: \"10px\",\n    textTransform: \"uppercase\",\n    fontWeight: \"bold\"\n  },\n  size: {\n    backgroundColor: \"#ff9800\",\n    color: \"white\",\n    fontSize: \"25px\",\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin:\"25px\"\n  }\n});\nclass Header extends Component {\n  render() {\n    const {classes} = this.props;\n    const {results, dataSize} = this.props;\n    return (\n      <Grid item xs={12} className={classes.titleContainer}>\n        <Typography variant=\"h3\" color=\"primary\" className={classes.titleRepo}>\n          {results[0].source.repository.name}\n        </Typography>\n        <Avatar className={classes.size}>{dataSize}</Avatar>\n      </Grid>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles (styles)(Header);\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fetchRepos } from \"../../Services/RepoServices\";\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Loading from \"./Loading\";\nimport PullReqList from \"./PullReqList\";\nimport Header from \"./Header\";\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n});\n\nconst themeApp = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#29b6f6',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#333',\n      contrastText: '#000',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Nunito Sans', \n      'sans-serif',\n    ].join(','),\n    fontSize: 16\n  },\n});\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null,\n      dataSize: \"\",\n      red: \"\",\n      repoNames: [\n        \"atlassian-aws-deployment\",\n        \"atlassian-azure-deployment\",\n        \"atlasboard-atlassian-package\"\n      ]\n    };\n    this.getPullRequest = this.getPullRequest.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPullRequest();\n  }\n\n  getPullRequest() {\n    let counter = 0;\n\n    const showRepo = () => {\n      if (counter > this.state.repoNames.length - 1) {\n        counter = 0;\n      }\n\n      let repoName = this.state.repoNames[counter];\n\n      fetchRepos(repoName).then(data => {\n        let size = data.size;\n        this.setState({\n          dataSize: size\n        });\n        let apiResults = data.values.map(item => fetch(item.links.self.href));\n        Promise.all(apiResults).then(url => {\n          const responseUrl = url.map(response => response.json());\n          Promise.all(responseUrl).then(urlId => {\n            this.setState({\n              results: urlId\n            });\n            counter++;\n          });\n        });\n      });\n    };\n    showRepo();\n    setInterval(showRepo, 5000);\n  }\n\n  render() {\n\n    const { results, dataSize } = this.state;\n\n    if (results) {\n      return (\n        <React.Fragment>\n          <CssBaseline />\n          <MuiThemeProvider theme={themeApp}>\n            <header>\n              <Header results={results} dataSize={dataSize} />\n            </header>\n            <main>\n              <PullReqList results={results} />\n            </main>\n          </MuiThemeProvider>\n        </React.Fragment>\n      );\n    } else {\n      return <Loading />;\n    }\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","let endPoint = (repoName) => `https://api.bitbucket.org/2.0/repositories/atlassian/${repoName}/pullrequests/`\n\nconst fetchRepos = (repoName) => fetch(endPoint(repoName)).then(response => response.json());\n\nexport {fetchRepos};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/Monitor/App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\ndocument.getElementById('root'));\n\n"],"sourceRoot":""}